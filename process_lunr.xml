<?xml version="1.0" encoding="UTF-8" ?>
<!--ant-->
<!--
  This file is part of the DITA-OT Bootstrap Lunr Plug-in project.
  See the accompanying LICENSE file for applicable licenses.
-->
<project name="dita-bootstrap.lunr" xmlns:if="ant:if" xmlns:unless="ant:unless">

  <target name="lunr.init">
    <condition property="is.lunr">
      <equals arg1="${out.ext}" arg2=".html" />
    </condition>
    <property
      name="lunr.node.script"
      value="${dita.plugin.dita-bootstrap.lunr.dir}/resource/node-lunr.js"
    />
    <property
      name="lunr.search.template"
      value="${dita.plugin.dita-bootstrap.lunr.dir}/resource/search.dita"
    />
    <property
      name="lunr.lib"
      value="${dita.plugin.dita-bootstrap.lunr.dir}/resource/lunr.js"
    />
    <!--property name="lunr.index" value="${dita.output.dir}/js/lunr-index.json"/>
    <property name="lunr.preview"  value="${dita.output.dir}/js/lunr-preview.json"/-->

    <tempfile
      property="lunr.index"
      deleteonexit="true"
      destdir="${dita.temp.dir}"
      createfile="true"
    />
    <tempfile
      property="lunr.preview"
      deleteonexit="true"
      destdir="${dita.temp.dir}"
      createfile="true"
    />

  </target>


  <target name="lunr.copy" if="is.lunr" description="Copy lunr files">
    <!-- -->
    <copy
      file="${dita.plugin.dita-bootstrap.lunr.dir}/resource/lunr-client.js"
      toFile="${dita.output.dir}/js/lunr-client.js"
      overwrite="true"
    />

    <loadfile
      failonerror="true"
      property="lunr.index.output"
      srcfile="${lunr.index}"
    />
    <loadfile
      failonerror="true"
      property="lunr.preview.output"
      srcfile="${lunr.preview}"
    />

    <replace
      file="${dita.output.dir}/js/lunr-client.js"
      token="@@@lunr.index.output@@@"
      value="${lunr.index.output}"
    />
    <replace
      file="${dita.output.dir}/js/lunr-client.js"
      token="@@@lunr.index.preview@@@"
      value="${lunr.preview.output}"
    />
  </target>

  <!--
    Check if Node is installed.
  -->
  <target name="lunr.node.check" if="is.lunr">
    <!-- For Unix run node as an executable -->

    <exec
      executable="node"
      dir="${dita.dir}"
      osfamily="unix"
      taskname="node"
      resultproperty="node.result"
      outputproperty="node.out"
      failonerror="false"
      failifexecutionfails="false"
    >
      <arg line="-v" />
    </exec>
    <!-- For Windows run from a DOS command -->
    <exec
      executable="cmd"
      dir="${dita.dir}"
      osfamily="windows"
      taskname="node"
      resultproperty="node.result"
      outputproperty="node.out"
      failonerror="false"
      failifexecutionfails="false"
    >
      <arg value="/C" />
      <arg value="node -v" />
    </exec>

    <condition property="node.installed">
      <equals arg1="${node.result}" arg2="0" />
    </condition>

    <dita-ot-fail unless:set="node.installed" id="LUNR001F" />
  </target>

  <target name="bootstrap.lunr.headers">
    <!-- Location of page header template with hard-coded links -->
    <property
      name="args.hdr"
      location="${dita.plugin.dita-bootstrap.lunr.dir}/includes/bs-navbar-default.hdr.xml"
    />
  </target>

  <target name="add.lunr" if="is.lunr">
      <property name="lunr.json" value="${dita.temp.dir}/lunr.json" />
     
      <property name="lunr.temp.dir" value="${dita.temp.dir}/lunr" />
      <mkdir dir="${lunr.temp.dir}" />


      <pipeline message="Convert DITA topic to search strings" taskname="xslt">
      <xslt
        destdir="${lunr.temp.dir}"
        extension="xml"
        style="${dita.plugin.dita-bootstrap.lunr.dir}/xsl/extract-data.xsl"
        filenameparameter="FILENAME"
        filedirparameter="FILEDIR"
        parallel="${parallel}"
      >
        <ditafileset format="dita" processingRole="normal" />
        <param name="BASEDIR" expression="${dita.dir}" />
        <param name="OUTPUTDIR" expression="${dita.output.dir}" />
        <param name="OUTEXT" expression="${out.ext}" if:set="out.ext" />
        <param name="defaultLanguage" expression="${default.language}" />
      </xslt>
      </pipeline>


      <tempfile
      deleteonexit="true"
      destdir="${dita.temp.dir}/lunr"
      property="lunr.data.file"
    />
      <xslt
      taskname="merge-lunr"
      force="true"
      in="${dita.plugin.dita-bootstrap.lunr.dir}/xsl/extract-data.xsl"
      out="${lunr.data.file}"
      style="${dita.plugin.dita-bootstrap.lunr.dir}/xsl/merge-data.xsl"
    >
        <xmlcatalog refid="dita.catalog" />
        <param expression="${lunr.temp.dir}/" name="in" />
        <param expression="xml" name="extension" />
        <factory name="net.sf.saxon.TransformerFactoryImpl" />
      </xslt>

      <xslt
      taskname="generate-lunr-to-json"
      in="${lunr.data.file}"
      out="${lunr.json}"
      style="${dita.plugin.dita-bootstrap.lunr.dir}/xsl/data-to-json.xsl"
    />

      <xslt
      taskname="generate-preview-json"
      in="${lunr.data.file}"
      out="${lunr.preview}"
      style="${dita.plugin.dita-bootstrap.lunr.dir}/xsl/data-to-preview.xsl"
    />

    <property name="lunr.json.file" location="${lunr.json}" />
    <property name="lunr.index.file" location="${lunr.index}" />
    <!-- For Unix run node as an executable -->
    <exec executable="node" dir="${dita.dir}" osfamily="unix" taskname="node">

      <arg line="${lunr.node.script}" />
      <arg line="${lunr.lib}" />
      <arg line="${lunr.json.file}" />
      <arg line="${lunr.index.file}" />
    </exec>
    <!-- For Windows run from a DOS command -->
    <exec executable="cmd" dir="${dita.dir}" osfamily="windows" taskname="node">
      <arg value="/C" />
      <arg
        value="node  &quot;${lunr.node.script}&quot; &quot;${lunr.lib}&quot; &quot;${lunr.json.file}&quot; &quot;${lunr.index.file}&quot;"
      />
    </exec>

    <!-- Clean up temporary files -->
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${lunr.temp.dir}" includes="**/*" />
    </delete> 
  </target>

  <target
    name="lunr"
    depends="lunr.init, lunr.node.check, add.lunr, lunr.copy"
  />
</project>
